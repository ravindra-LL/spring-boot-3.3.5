plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	
	// JWT dependencies
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	
	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	// SpringDoc OpenAPI (Swagger UI)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	
	// Spring Boot DevTools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('bootRun') {
	// Enable passing system properties
	systemProperties System.properties

	// Enable debug mode
	jvmArgs = [
		'-XX:TieredStopAtLevel=1',
		'-Dspring.output.ansi.enabled=always'
	]
}

// Configure DevTools
configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

sourceCompatibility = '17'
targetCompatibility = '17'
